import java.awt.List;
import java.awt.Point;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSeparator;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

public class Scenario extends javax.swing.JFrame {
	
	
	/**
     * Creates new form Scenario
     */
	
    public Scenario(AdminMain main) {
    	
    	this.main = main;
    	// create XML Document.
    	try {
     	   documentFactory = DocumentBuilderFactory.newInstance();
 		   documentBuilder = documentFactory.newDocumentBuilder();
 		   document = documentBuilder.newDocument();
 	} catch (ParserConfigurationException e) {
 		// TODO Auto-generated catch block
 		e.printStackTrace();
 	}
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	
    	try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Scenario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Scenario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Scenario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Scenario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    	
 
    	scenarioNameLabel = new javax.swing.JLabel();
        scenarioNameTextField = new javax.swing.JTextField();
        doneButton = new javax.swing.JButton();
        targetTypeLabel = new javax.swing.JLabel();
        targetTypeComboBox = new javax.swing.JComboBox();
        randomLabel = new javax.swing.JLabel();
        movementLabel = new javax.swing.JLabel();
        movementComboBox = new javax.swing.JComboBox();
        speedLabel = new javax.swing.JLabel();
        fuelPointsPatternTextField = new javax.swing.JTextField("1");
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        addTargetButton = new javax.swing.JButton();
        positionXLabel = new javax.swing.JLabel();
        positionXTextField = new javax.swing.JTextField();
        positionYLabel = new javax.swing.JLabel();
        positionYTextField = new javax.swing.JTextField();
        seedLabel = new javax.swing.JLabel();
        seedTextField = new javax.swing.JTextField();
        patternLabel = new javax.swing.JLabel();
        targetTypePatternLabel = new javax.swing.JLabel();
        targetTypePatternComboBox = new javax.swing.JComboBox();
        positionXPatternLabel1 = new javax.swing.JLabel();
        positionXPatternTextField = new javax.swing.JTextField();
        positionYPatternLabel = new javax.swing.JLabel();
        positionYPatternTextField = new javax.swing.JTextField();
        speedPatternLabel = new javax.swing.JLabel();
        speedPatternTextField = new javax.swing.JTextField("1");
        fuelPointsLabel = new javax.swing.JLabel();
        speedTextField = new javax.swing.JTextField("1");
        addTargetPatternButton = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        blueLabel = new javax.swing.JLabel();
        redLabel = new javax.swing.JLabel();
        blueUnitIDLabel = new javax.swing.JLabel();
        blueUnitIDXTextField = new javax.swing.JTextField();
        redUnitIDXTextField = new javax.swing.JTextField();
        redUnitIDLabel = new javax.swing.JLabel();
        positionYBlueUnitLabel = new javax.swing.JLabel();
        positionYBlueUnitTextField = new javax.swing.JTextField();
        positionXBlueUnitLabel = new javax.swing.JLabel();
        positionXBlueUnitTextField = new javax.swing.JTextField();
        positionXLabel2 = new javax.swing.JLabel();
        positionXRedUnitTextField = new javax.swing.JTextField();
        positionYRedUnitTextField = new javax.swing.JTextField();
        positionYLabel2 = new javax.swing.JLabel();
        fuelPointsBlueUnitTextField = new javax.swing.JTextField("1");
        speedBlueUnitLabel = new javax.swing.JLabel();
        speedBlueUnitTextField = new javax.swing.JTextField("1");
        fuelPointsBlueUnitLabel = new javax.swing.JLabel();
        fuelPointsLabel2 = new javax.swing.JLabel();
        speedPatternLabel2 = new javax.swing.JLabel();
        speedRedUnitTextField = new javax.swing.JTextField("1");
        fuelPointsRedUnitTextField = new javax.swing.JTextField("1");
        addBlueUnittButton = new javax.swing.JButton();
        addRedUnitButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        numberofRandomTragetLabel = new javax.swing.JLabel();
        numberRandomTargetsTextField = new javax.swing.JTextField();
        numberPatternTargetsTextField = new javax.swing.JTextField();
        numberPatternTargetsLabel = new javax.swing.JLabel();
        numberBlueUnitsTextField = new javax.swing.JTextField();
        numberBlueUnitsLabel = new javax.swing.JLabel();
        numberRedUnitsLabel = new javax.swing.JLabel();
        numberRedUnitsTextField = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        detectionBlueUnitLabel = new javax.swing.JLabel();
        detectionBlueUnitTextField = new javax.swing.JTextField("25");
        detectionRedLabel = new javax.swing.JLabel();
        detectionRedUnitTextField = new javax.swing.JTextField("25");
        performanceLabel = new javax.swing.JLabel();
        performanceComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Create Scenario");
        setResizable(false);

        scenarioNameLabel.setText("Scenario Name: ");

        scenarioNameTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scenarioNameTextFieldMouseClicked(evt);
            }
        });
        scenarioNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scenarioNameTextFieldActionPerformed(evt);
            }
        });
        scenarioNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                scenarioNameTextFieldKeyPressed(evt);
            }
        });

        doneButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        doneButton.setForeground(new java.awt.Color(51, 51, 51));
        doneButton.setText("Done!");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        targetTypeLabel.setText("Type: ");

        targetTypes = new String[] { "","Small", "Large" };
        targetTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(targetTypes));

        randomLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        randomLabel.setForeground(java.awt.Color.blue);
        randomLabel.setText("Random Targets ");

        movementLabel.setText("Movement: ");

        movementTypes = new String[] { "", "Random", "Vertical", "Horizontal", "ZagZag" };
        movementComboBox.setModel(new javax.swing.DefaultComboBoxModel(movementTypes));
        movementComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                movementComboBoxMouseClicked(evt);
            }
        });
        movementComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movementComboBoxActionPerformed(evt);
            }
        });

        speedLabel.setText("Speed: ");

        fuelPointsPatternTextField.setToolTipText("Time Between Each Target's Move In Minutes");

        addTargetButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addTargetButton.setForeground(java.awt.Color.blue);
        addTargetButton.setText("Add Target");
        addTargetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTargetButtonActionPerformed(evt);
            }
        });

        positionXLabel.setText("PositionX:");

        positionXTextField.setToolTipText("Integer Value between (0 and 750)");

        positionYLabel.setText("PositionY:");

        positionYTextField.setToolTipText("Integer Value Between (0 and 570)");

        seedLabel.setText("Random Seed:");

        seedTextField.setToolTipText("10 Digits - Default 1");
        seedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seedTextFieldActionPerformed(evt);
            }
        });

        patternLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        patternLabel.setForeground(new java.awt.Color(153, 0, 0));
        patternLabel.setText("Pattern Targets ");

        targetTypePatternLabel.setText("Type: ");

        //targetTypePatternComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Small", "Large" }));
        //targetTypes = new String[] { "","Small", "Large" };
        
        targetTypePatternComboBox.setModel(new javax.swing.DefaultComboBoxModel(targetTypes));
        
        
        positionXPatternLabel1.setText("PositionX:");

        positionXPatternTextField.setToolTipText("Integer Value between (0 and 750)");

        positionYPatternLabel.setText("PositionY:");

        positionYPatternTextField.setToolTipText("Integer Value Between (0 and 570)");
        positionYPatternTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                positionYPatternTextFieldActionPerformed(evt);
            }
        });

        speedPatternLabel.setText("Speed: ");

        speedPatternTextField.setToolTipText("Time Between Each Target's Move In Minutes");

        fuelPointsLabel.setText("Fuel Points");

        speedTextField.setToolTipText("Time Between Each Target's Move In Minutes");

        addTargetPatternButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addTargetPatternButton.setForeground(new java.awt.Color(153, 51, 0));
        addTargetPatternButton.setText("Add Target");
        addTargetPatternButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTargetPatternButtonActionPerformed(evt);
            }
        });

        blueLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        blueLabel.setForeground(java.awt.Color.blue);
        blueLabel.setText("Blue Units ");

        redLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        redLabel.setForeground(java.awt.Color.red);
        redLabel.setText("Red Units ");

        blueUnitIDLabel.setText("Unit ID:");

        blueUnitIDXTextField.setToolTipText("Integer Value between (1 and 10)");

        redUnitIDXTextField.setToolTipText("Integer Value between (1 and 10)");

        redUnitIDLabel.setText("Unit ID:");

        positionYBlueUnitLabel.setText("PositionY:");

        positionYBlueUnitTextField.setToolTipText("Integer Value Between (0 and 415)");

        positionXBlueUnitLabel.setText("PositionX:");

        positionXBlueUnitTextField.setToolTipText("Integer Value between (0 and 750)");

        positionXLabel2.setText("PositionX:");

        positionXRedUnitTextField.setToolTipText("Integer Value between (0 and 750)");

        positionYRedUnitTextField.setToolTipText("Integer Value Between (0 and 415)");

        positionYLabel2.setText("PositionY:");

        fuelPointsBlueUnitTextField.setToolTipText("Time Between Each Target's Move In Minutes");
        
        detectionBlueUnitTextField.setToolTipText("Detection Radius Between (25 and 125)");
        
        speedBlueUnitLabel.setText("Speed: ");

        speedBlueUnitTextField.setToolTipText("Time Between Each Target's Move In Minutes");

        fuelPointsBlueUnitLabel.setText("Fuel Points:");

        fuelPointsLabel2.setText("Fuel Points:");

        speedPatternLabel2.setText("Speed: ");

        speedRedUnitTextField.setToolTipText("Time Between Each Target's Move In Minutes");

        fuelPointsRedUnitTextField.setToolTipText("Time Between Each Target's Move In Minutes");
        
        detectionRedUnitTextField.setToolTipText("Detection Radius Between (25 and 125)");

        addBlueUnittButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addBlueUnittButton.setForeground(java.awt.Color.blue);
        addBlueUnittButton.setText("Add Unit");
        addBlueUnittButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBlueUnittButtonActionPerformed(evt);
            }
        });

        addRedUnitButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addRedUnitButton.setForeground(java.awt.Color.red);
        addRedUnitButton.setText("Add Unit");
        addRedUnitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRedUnitButtonActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        numberofRandomTragetLabel.setText("Number Of Targets:");

        numberRandomTargetsTextField.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        numberRandomTargetsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numberRandomTargetsTextField.setText("0");
        numberRandomTargetsTextField.setToolTipText("");
        numberRandomTargetsTextField.setEnabled(false);

        numberPatternTargetsTextField.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        numberPatternTargetsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numberPatternTargetsTextField.setText("0");
        numberPatternTargetsTextField.setToolTipText("");
        numberPatternTargetsTextField.setEnabled(false);

        numberPatternTargetsLabel.setText("Number Of Targets:");

        numberBlueUnitsTextField.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        numberBlueUnitsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numberBlueUnitsTextField.setText("0");
        numberBlueUnitsTextField.setToolTipText("");
        numberBlueUnitsTextField.setEnabled(false);

        numberBlueUnitsLabel.setText("Number Of Units:");

        numberRedUnitsLabel.setText("Number Of Units:");

        numberRedUnitsTextField.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        numberRedUnitsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numberRedUnitsTextField.setText("0");
        numberRedUnitsTextField.setToolTipText("");
        numberRedUnitsTextField.setEnabled(false);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        detectionBlueUnitLabel.setText("Detection:");

        detectionBlueUnitTextField.setToolTipText("Time Between Each Target's Move In Minutes");

        detectionRedLabel.setText("Detection:");

        detectionRedUnitTextField.setToolTipText("Time Between Each Target's Move In Minutes");

        performanceLabel.setText("Performance:");
        performanceList = new String[] { "", "100", "75", "50", "25" };
        performanceComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "","100%", "75%", "50%", "25%" }));
        performanceComboBox.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator4)
            .addComponent(jSeparator5)
            .addComponent(jSeparator6)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(randomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(targetTypeLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(targetTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(positionXLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(positionXTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(positionYLabel)
                                            .addComponent(speedLabel))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(speedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(positionYTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(blueLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(numberBlueUnitsLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(numberBlueUnitsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(positionXBlueUnitLabel)
                                                    .addComponent(blueUnitIDLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(blueUnitIDXTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(positionXBlueUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(positionYBlueUnitLabel)
                                                    .addComponent(speedBlueUnitLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(speedBlueUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(positionYBlueUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(6, 6, 6))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addComponent(addBlueUnittButton))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(detectionBlueUnitLabel)
                                        .addGap(25, 25, 25)
                                        .addComponent(detectionBlueUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(fuelPointsBlueUnitLabel)
                                        .addGap(15, 15, 15)
                                        .addComponent(fuelPointsBlueUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(addTargetButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(numberofRandomTragetLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numberRandomTargetsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addComponent(redLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(fuelPointsLabel2)
                                                        .addGap(15, 15, 15)
                                                        .addComponent(fuelPointsRedUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(speedPatternLabel2)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(detectionRedLabel)
                                                        .addGap(25, 25, 25)
                                                        .addComponent(detectionRedUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(positionXLabel2)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(positionXRedUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(positionYLabel2)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(positionYRedUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(redUnitIDLabel)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(redUnitIDXTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(80, 80, 80)
                                                .addComponent(speedRedUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(addRedUnitButton)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(numberRedUnitsLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(numberRedUnitsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(patternLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(fuelPointsLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(fuelPointsPatternTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(speedPatternLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(speedPatternTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(positionYPatternLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(positionYPatternTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(positionXPatternLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(positionXPatternTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(targetTypePatternLabel)
                                                .addGap(18, 18, 18)
                                                .addComponent(targetTypePatternComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGap(29, 29, 29)
                                            .addComponent(addTargetPatternButton)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(numberPatternTargetsLabel)
                                        .addGap(5, 5, 5)
                                        .addComponent(numberPatternTargetsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(scenarioNameLabel)
                                .addGap(18, 18, 18)
                                .addComponent(scenarioNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(movementLabel)
                                .addGap(12, 12, 12)
                                .addComponent(movementComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(seedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(seedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(doneButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(performanceLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(performanceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scenarioNameLabel)
                    .addComponent(scenarioNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(movementLabel)
                        .addComponent(movementComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(seedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(seedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(patternLabel)
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(targetTypePatternLabel)
                                    .addComponent(targetTypePatternComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(randomLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(targetTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(targetTypeLabel))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(positionXLabel)
                                    .addComponent(positionXTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(positionYLabel)
                                    .addComponent(positionYTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(speedLabel)
                                    .addComponent(speedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addTargetButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(numberRandomTargetsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(numberofRandomTragetLabel)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(positionXPatternTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(positionXPatternLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(positionYPatternLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(speedPatternLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(positionYPatternTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(speedPatternTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fuelPointsPatternTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fuelPointsLabel))
                                .addGap(5, 5, 5)
                                .addComponent(addTargetPatternButton)
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(numberPatternTargetsLabel)
                                    .addComponent(numberPatternTargetsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(blueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(redLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(blueUnitIDLabel)
                                .addComponent(blueUnitIDXTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(redUnitIDLabel)
                                .addComponent(redUnitIDXTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(positionXLabel2)
                                    .addComponent(positionXRedUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(positionYLabel2)
                                    .addComponent(positionYRedUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(speedPatternLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(speedRedUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fuelPointsLabel2)
                                    .addComponent(fuelPointsRedUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(positionXBlueUnitLabel)
                                    .addComponent(positionXBlueUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(positionYBlueUnitLabel)
                                    .addComponent(positionYBlueUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(speedBlueUnitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(speedBlueUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fuelPointsBlueUnitLabel)
                                    .addComponent(fuelPointsBlueUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(detectionBlueUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(detectionBlueUnitLabel))
                                .addGap(10, 10, 10))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(detectionRedLabel)
                                    .addComponent(detectionRedUnitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(addBlueUnittButton)
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(numberBlueUnitsLabel)
                                    .addComponent(numberBlueUnitsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(addRedUnitButton)
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(numberRedUnitsLabel)
                                    .addComponent(numberRedUnitsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2)))
                .addGap(5, 5, 5)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(performanceLabel)
                    .addComponent(performanceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(doneButton)
                .addGap(5, 5, 5))
        );

    	
// Start a new design here
    	
    	
        // disable components.
        movementComboBox.setEnabled(false);
        seedTextField.setEnabled(false);
        targetTypeComboBox.setEnabled(false);
        positionXTextField.setEnabled(false);
        positionYTextField.setEnabled(false);
        speedTextField.setEnabled(false);
        targetTypePatternComboBox.setEnabled(false);
        positionXPatternTextField.setEnabled(false);
        positionYPatternTextField.setEnabled(false);
        speedPatternTextField.setEnabled(false);
        fuelPointsPatternTextField.setEnabled(false);
        addTargetPatternButton.setEnabled(false);
        addTargetButton.setEnabled(false);
        
        doneButton.setEnabled(false);
        
        
        
        
        // Disable blue units
        addBlueUnittButton.setEnabled(false);
        blueUnitIDXTextField.setEnabled(false);
        fuelPointsBlueUnitTextField.setEnabled(false);
        positionXBlueUnitTextField.setEnabled(false);
        positionYBlueUnitTextField.setEnabled(false);
        speedBlueUnitTextField.setEnabled(false);
        numberBlueUnitsTextField.setEnabled(false);
        detectionBlueUnitTextField.setEnabled(false);
        
        
        // Disable red units
        addRedUnitButton.setEnabled(false);
        fuelPointsRedUnitTextField.setEnabled(false);
        numberRedUnitsTextField.setEnabled(false);
        positionXRedUnitTextField.setEnabled(false);
        positionYRedUnitTextField.setEnabled(false);
        redUnitIDXTextField.setEnabled(false);
        speedRedUnitTextField.setEnabled(false);
        detectionRedUnitTextField.setEnabled(false);

        
        
        // load GUI
        pack();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
	    setVisible(true);
    }// </editor-fold>//GEN-END:initComponents
    
    private void movementComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_movementComboBoxMouseClicked
        //System.out.println( " HHHHHHHHHHHHHHHHHHHHHHHHH   ");
        // TODO add your handling code here:
    }//GEN-LAST:event_movementComboBoxMouseClicked
    
    private void addBlueUnittButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBlueUnittButtonActionPerformed
    	
    	//System.out.println( " BLUE UNIT   IS ADD");
    	
    	
    	
    	try {
	    	
		       Integer.parseInt(blueUnitIDXTextField.getText());
			   Integer.parseInt(positionXBlueUnitTextField.getText());
			   Integer.parseInt(positionYBlueUnitTextField.getText());
			   Integer.parseInt(speedBlueUnitTextField.getText());
			   Integer.parseInt(fuelPointsBlueUnitTextField.getText());
			   Integer.parseInt(detectionBlueUnitTextField.getText());
			   
			   
	        
	    } catch (NumberFormatException e) {
	    	
	    	JOptionPane.showMessageDialog(null,
	            "All Inputs Should Be Valid!",
	            "Input Error", JOptionPane.ERROR_MESSAGE);
	    	return;
	     
	    }
	
	// empty input
	if(     blueUnitIDXTextField.getText().length() == 0 ||
			positionXBlueUnitTextField.getText().length() == 0 ||
			positionYBlueUnitTextField.getText().length() == 0 ||
			speedBlueUnitTextField.getText().length() == 0 ||
			fuelPointsBlueUnitTextField.getText().length() == 0 ||
			detectionBlueUnitTextField.getText().length() == 0){
		    
		JOptionPane.showMessageDialog(null,
	            "All Inputs Should Be Provided!",
	            "Input Error", JOptionPane.ERROR_MESSAGE);
	// invalid imputs	
	} else if (Integer.parseInt(blueUnitIDXTextField.getText()) < 1 ||
			   Integer.parseInt(blueUnitIDXTextField.getText()) > 10 ||
			   Integer.parseInt(positionXBlueUnitTextField.getText()) < 0 ||
			   Integer.parseInt(positionXBlueUnitTextField.getText()) > 750 ||
			   Integer.parseInt(positionYBlueUnitTextField.getText()) < 0 ||
			   Integer.parseInt(positionYBlueUnitTextField.getText()) > 415 ||
			   Integer.parseInt(speedBlueUnitTextField.getText()) < 1 ||
			   Integer.parseInt(fuelPointsBlueUnitTextField.getText()) < 1 ||
			   Integer.parseInt(detectionBlueUnitTextField.getText()) < 25 ||
			   Integer.parseInt(detectionBlueUnitTextField.getText()) > 125){
		
		//JOptionPane.showConfirmDialog(null, "All Entries Should be In Range", "naughty", JOptionPane.CANCEL_OPTION);
		JOptionPane.showMessageDialog(null,
	            "All Inputs Should be In Scope!",
	            "Input Error", JOptionPane.ERROR_MESSAGE);
		
	} else if(!unitIDs.add(blueUnitIDXTextField.getText())){
		
		JOptionPane.showMessageDialog(null,
	            "Unit Id Is Already In Use!",
	            "Input Error", JOptionPane.ERROR_MESSAGE);
		
	} else {
 	   	
 	// create target child elements
 	// add scenario target element
 	            
 	            Element unit = document.createElement("unit");
 				units.appendChild(unit);

 				// set an attribute id to unit element
 				
 				Attr unitId = document.createAttribute("id");
 				unitId.setValue(blueUnitIDXTextField.getText());
 				unit.setAttributeNode(unitId);
 				
 				// set an attribute positionX to unit element 
 				Attr unitPositionX = document.createAttribute("positionX");
 				unitPositionX.setValue(positionXBlueUnitTextField.getText());
 				unit.setAttributeNode(unitPositionX);
 				
 				// set an attribute positionY to unit element 
 				Attr unitPositionY = document.createAttribute("positionY");
 				unitPositionY.setValue(positionYBlueUnitTextField.getText());
 				unit.setAttributeNode(unitPositionY);
 				
 				// set an attribute speed to unit element 
 				Attr unitSpeed = document.createAttribute("speed");
 				unitSpeed.setValue(speedBlueUnitTextField.getText());
 				unit.setAttributeNode(unitSpeed);
 				
 				// set an attribute fuel points to unit element
 				Attr unitFuelPoints = document.createAttribute("fuelpoints");
 				unitFuelPoints.setValue(fuelPointsBlueUnitTextField.getText());
 				unit.setAttributeNode(unitFuelPoints);
 				
 			   // set an attribute color id to blue unit element
 				Attr colorID = document.createAttribute("colorID");
 				colorID.setValue("1");
 				unit.setAttributeNode(colorID);
 				
 			   // set an attribute Detection radius to blue unit element
 				Attr detectRadius = document.createAttribute("detectRadius");
 				detectRadius.setValue(detectionBlueUnitTextField.getText());
 				unit.setAttributeNode(detectRadius);
 	
 	  // done with child elements
 				
 				/*int positionX = Integer.parseInt(positionXTextField.getText());
 		    	int positionY = Integer.parseInt(positionYTextField.getText());
 		    	int speed = Integer.parseInt(speedTextField.getText());
 		    	target = new target(positionX, positionY, speed, imageType, movement);
 		    	targetList.add(target);
 		    			*/
 		    	
 			   blueUnitsNO++;
 			   numberBlueUnitsTextField.setText(String.valueOf(blueUnitsNO));
 		       blueUnitIDXTextField.setText("");
 			   positionXBlueUnitTextField.setText("");
 			   positionYBlueUnitTextField.setText("");
 			   speedBlueUnitTextField.setText("1");
 			   fuelPointsBlueUnitTextField.setText("1");
 			   detectionBlueUnitTextField.setText("25");
 		       doneButton.setEnabled(true);
 		       performanceComboBox.setEnabled(true);
 		       
	       }
	
    }//GEN-LAST:event_addBlueUnittButtonActionPerformed

    private void addRedUnitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRedUnitButtonActionPerformed
        //System.out.println( " Red UNIT IS ADD  ");
        
        try {
	    	
		       Integer.parseInt(redUnitIDXTextField.getText());
			   Integer.parseInt(positionXRedUnitTextField.getText());
			   Integer.parseInt(positionYRedUnitTextField.getText());
			   Integer.parseInt(speedRedUnitTextField.getText());
			   Integer.parseInt(fuelPointsRedUnitTextField.getText());
			   Integer.parseInt(detectionRedUnitTextField.getText());
			   
			   
	        
	    } catch (NumberFormatException e) {
	    	
	    	JOptionPane.showMessageDialog(null,
	            "All Inputs Should Be Valid!",
	            "Input Error", JOptionPane.ERROR_MESSAGE);
	    	return;
	     
	    }
	
	// empty input
	if(     redUnitIDXTextField.getText().length() == 0 ||
			positionXRedUnitTextField.getText().length() == 0 ||
			positionYRedUnitTextField.getText().length() == 0 ||
			speedRedUnitTextField.getText().length() == 0 ||
			fuelPointsRedUnitTextField.getText().length() == 0 ||
			detectionRedUnitTextField.getText().length() == 0){
		    
		JOptionPane.showMessageDialog(null,
	            "All Inputs Should Be Provided!",
	            "Input Error", JOptionPane.ERROR_MESSAGE);
	// invalid imputs	
	} else if (Integer.parseInt(redUnitIDXTextField.getText()) < 1 ||
			   Integer.parseInt(redUnitIDXTextField.getText()) > 10 ||
			   Integer.parseInt(positionXRedUnitTextField.getText()) < 0 ||
			   Integer.parseInt(positionXRedUnitTextField.getText()) > 750 ||
			   Integer.parseInt(positionYRedUnitTextField.getText()) < 0 ||
			   Integer.parseInt(positionYRedUnitTextField.getText()) > 415 ||
			   Integer.parseInt(speedRedUnitTextField.getText()) < 1 ||
			   Integer.parseInt(fuelPointsRedUnitTextField.getText()) < 1 ||
			   Integer.parseInt(detectionRedUnitTextField.getText()) < 25 ||
			   Integer.parseInt(detectionRedUnitTextField.getText()) > 125){
		
		//JOptionPane.showConfirmDialog(null, "All Entries Should be In Range", "naughty", JOptionPane.CANCEL_OPTION);
		JOptionPane.showMessageDialog(null,
	            "All Inputs Should be In Scope!",
	            "Input Error", JOptionPane.ERROR_MESSAGE);
		
	} else if(!unitIDs.add(redUnitIDXTextField.getText())){
		
		JOptionPane.showMessageDialog(null,
	            "Unit Id Is Already In Use!",
	            "Input Error", JOptionPane.ERROR_MESSAGE);
		
	} else {
	   	
	// create target child elements
	// add scenario target element
	            
	            Element unit = document.createElement("unit");
				units.appendChild(unit);

				// set an attribute id to unit element
				
				Attr unitId = document.createAttribute("id");
				unitId.setValue(redUnitIDXTextField.getText());
				unit.setAttributeNode(unitId);
				
				// set an attribute positionX to unit element 
				Attr unitPositionX = document.createAttribute("positionX");
				unitPositionX.setValue(positionXRedUnitTextField.getText());
				unit.setAttributeNode(unitPositionX);
				
				// set an attribute positionY to unit element 
				Attr unitPositionY = document.createAttribute("positionY");
				unitPositionY.setValue(positionYRedUnitTextField.getText());
				unit.setAttributeNode(unitPositionY);
				
				// set an attribute speed to unit element 
				Attr unitSpeed = document.createAttribute("speed");
				unitSpeed.setValue(speedRedUnitTextField.getText());
				unit.setAttributeNode(unitSpeed);
				
				// set an attribute fuel points to unit element
				Attr unitFuelPoints = document.createAttribute("fuelpoints");
				unitFuelPoints.setValue(fuelPointsRedUnitTextField.getText());
				unit.setAttributeNode(unitFuelPoints);
				
			   // set an attribute color id to blue unit element
				Attr colorID = document.createAttribute("colorID");
				colorID.setValue("0");
				unit.setAttributeNode(colorID);
				
				// set an attribute detection radius to blue unit element
				Attr detectRadius = document.createAttribute("detectRadius");
				detectRadius.setValue(detectionRedUnitTextField.getText());
				unit.setAttributeNode(detectRadius);
	
	  // done with child elements
				
				/*int positionX = Integer.parseInt(positionXTextField.getText());
		    	int positionY = Integer.parseInt(positionYTextField.getText());
		    	int speed = Integer.parseInt(speedTextField.getText());
		    	target = new target(positionX, positionY, speed, imageType, movement);
		    	targetList.add(target);
		    			*/
		    	
			   redUnitsNO++;
	 		   numberRedUnitsTextField.setText(String.valueOf(redUnitsNO));		       
	 		   redUnitIDXTextField.setText("");
			   positionXRedUnitTextField.setText("");
			   positionYRedUnitTextField.setText("");
			   speedRedUnitTextField.setText("1");
			   fuelPointsRedUnitTextField.setText("1");
			   detectionRedUnitTextField.setText("25");
		       doneButton.setEnabled(true);
		       performanceComboBox.setEnabled(true);
	       
	}

 	    
    }//GEN-LAST:event_addRedUnitButtonActionPerformed


    private void scenarioNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scenarioNameTextFieldActionPerformed
           	
    	String line = null;
    	ArrayList<String> list = new ArrayList<String>();

        try {
            // FileReader reads text files in the default encoding.
            FileReader fileReader = 
                new FileReader(scenarioPath+"List.txt");

            // Always wrap FileReader in BufferedReader.
            BufferedReader bufferedReader = 
                new BufferedReader(fileReader);
            
            while((line = bufferedReader.readLine()) != null) {
                //System.out.println(line);
                list.add(line);
            }	

            // Always close files.
            bufferedReader.close();			
        }
        catch(FileNotFoundException ex) {
            /*System.out.println(
                "Unable to open file '" + 
                "List.txt" + "'");	*/
            
            JOptionPane.showMessageDialog(null,
            		"Unable To Open File '" + 
                            "List.txt" + "'",
        		    "Error", JOptionPane.ERROR_MESSAGE);
            
        }
        catch(IOException ex) {
            /*System.out.println(
                "Error reading file '" 
                + "List.txt" + "'");*/
            
            JOptionPane.showMessageDialog(null,
            		"Error Reading File '" 
                            + "List.txt" + "'",
        		    "Error", JOptionPane.ERROR_MESSAGE);
            // Or we could just do this: 
            // ex.printStackTrace();
        }
        
        for (String name:list){
        	
        	if (name.compareToIgnoreCase(scenarioNameTextField.getText()) == 0){
        		
        		JOptionPane.showMessageDialog(null,
        		    "Scenario Name Dose Exist! Choose Other Name",
        		    "Input Error", JOptionPane.ERROR_MESSAGE);
        		    
        		scenarioNameTextField.setText("");
        		return;
        		 
        	}
        	
        }
        
        movementComboBox.setEnabled(true);
        scenarioNameTextField.setEnabled(false);
    	
    	
    }//GEN-LAST:event_scenarioNameTextFieldActionPerformed
    
    private void seedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seedTextFieldActionPerformed
            	  		
    		
    		
    		try {
     	    	
    	    	 int seed = Integer.parseInt(seedTextField.getText());
    	        
    	    } catch (NumberFormatException e) {
    	    	//JOptionPane.showConfirmDialog(null, "Please Enter 10 Digits Only", "naughty", JOptionPane.CANCEL_OPTION);
    	    	JOptionPane.showMessageDialog(null,
        	            "Invalid Imput, Enter 10 Digits!",
        	            "Input Error", JOptionPane.ERROR_MESSAGE);
    	    	return;
    	     
    	    }
    		
    		
    		if (seedTextField.getText().length() != 10 ){
 	    		
 	    		JOptionPane.showMessageDialog(null,
    	            "Seed Is Exactly 10 Digit!",
    	            "Input Error", JOptionPane.ERROR_MESSAGE);
 	    		
    			 //seedTextField.setText("");
 	    		// TODO add your handling code here:
 	    	} else {
 	    	
 	    		/*System.out.println(" -- Seed Value -- " + seedTextField.getText());
 	    		this.seed = seedTextField.getText();
 	    		System.out.println(" -- Seed Value Now -- " + seed);*/
 	    		
 	    	// root element attribute seed
 				Attr scenarioSeed = document.createAttribute("seed");
 				scenarioSeed.setValue(seedTextField.getText());
 				root.setAttributeNode(scenarioSeed);
 				
 				
 	    		targetTypeComboBox.setEnabled(true);
 	    		positionXTextField.setEnabled(true);
 	    		positionYTextField.setEnabled(true);
 	    		speedTextField.setEnabled(true);
 	    		addTargetButton.setEnabled(true);
 	    		seedTextField.setEnabled(false);
 	    		
 	    	}
 	    
    
    }//GEN-LAST:event_seedTextFieldActionPerformed
    
    private void positionYPatternTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_positionYPatternTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_positionYPatternTextFieldActionPerformed
    
private void addTargetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTargetButtonActionPerformed
        
    	try {
	    	
 		       Integer.parseInt(positionXTextField.getText());
			   Integer.parseInt(positionYTextField.getText());
			   Integer.parseInt(speedTextField.getText());
			   
	        
	    } catch (NumberFormatException e) {
	    	
	    	JOptionPane.showMessageDialog(null,
 	            "All Inputs Should Be Valid!",
 	            "Input Error", JOptionPane.ERROR_MESSAGE);
	    	return;
	     
	    }
 	
 	
 	if(     targetTypeComboBox.getSelectedIndex() == 0 ||
 			positionXTextField.getText().length() == 0 ||
 			positionYTextField.getText().length() == 0 ||
 			speedTextField.getText().length() == 0 ){
 		    
 		JOptionPane.showMessageDialog(null,
 	            "All Inputs Should Be Provided!",
 	            "Input Error", JOptionPane.ERROR_MESSAGE);
 		
 	} else if (Integer.parseInt(positionXTextField.getText()) < 0 ||
 			   Integer.parseInt(positionXTextField.getText()) > 750 ||
 			   Integer.parseInt(positionYTextField.getText()) < 0 ||
 			   Integer.parseInt(positionYTextField.getText()) > 570 ||
 			   Integer.parseInt(speedTextField.getText()) < 1 ){
 		
 		//JOptionPane.showConfirmDialog(null, "All Entries Should be In Range", "naughty", JOptionPane.CANCEL_OPTION);
 		JOptionPane.showMessageDialog(null,
 	            "All Inputs Should be In Scope!",
 	            "Input Error", JOptionPane.ERROR_MESSAGE);
 		
 	} else {
    	   	
    	// create target child elements
    	// add scenario target element
    	            
    	            Element target = document.createElement("target");
    				targets.appendChild(target);

    				// set an attribute id to target element
    				String id = String.valueOf(index);
    				Attr targetId = document.createAttribute("id");
    				targetId.setValue(id);
    				target.setAttributeNode(targetId);
    				
    				// set an attribute positionX to target element 
    				Attr targetPositionX = document.createAttribute("positionX");
    				targetPositionX.setValue(positionXTextField.getText());
    				target.setAttributeNode(targetPositionX);
    				
    				// set an attribute positionY to target element 
    				Attr targetPositionY = document.createAttribute("positionY");
    				targetPositionY.setValue(positionYTextField.getText());
    				target.setAttributeNode(targetPositionY);
    				
    				// set an attribute speed to target element 
    				Attr targetSpeed = document.createAttribute("speed");
    				targetSpeed.setValue(speedTextField.getText());
    				target.setAttributeNode(targetSpeed);
    				
    				// set an attribute image type to target element
    				String imageType = targetTypes[targetTypeComboBox.getSelectedIndex()];
    				Attr targetImageType = document.createAttribute("imageType");
    				targetImageType.setValue(imageType);
    				target.setAttributeNode(targetImageType);
    	
    	  // done with child elements
    				
    				/*int positionX = Integer.parseInt(positionXTextField.getText());
    		    	int positionY = Integer.parseInt(positionYTextField.getText());
    		    	int speed = Integer.parseInt(speedTextField.getText());
    		    	target = new target(positionX, positionY, speed, imageType, movement);
    		    	targetList.add(target);
    		    			*/
    		
    		    	positionXTextField.setText("");
    		    	positionYTextField.setText("");
    		    	speedTextField.setText("1");
    		    	targetTypeComboBox.setSelectedIndex(0);
    		    	index++; targetsNO++;
    		    	numberRandomTargetsTextField.setText(String.valueOf(targetsNO));
    		    	//doneButton.setEnabled(true);
    		    	
    		    	// Enable blue units
    		        addBlueUnittButton.setEnabled(true);
    		        blueUnitIDXTextField.setEnabled(true);
    		        fuelPointsBlueUnitTextField.setEnabled(true);
    		        detectionBlueUnitTextField.setEnabled(true);
    		        positionXBlueUnitTextField.setEnabled(true);
    		        positionYBlueUnitTextField.setEnabled(true);
    		        speedBlueUnitTextField.setEnabled(true);
    		        //numberBlueUnitsTextField.setEnabled(true);  
    		        
    		        
    		        // Enable red units
    		        addRedUnitButton.setEnabled(true);
    		        fuelPointsRedUnitTextField.setEnabled(true);
    		        detectionRedUnitTextField.setEnabled(true);
    		        positionXRedUnitTextField.setEnabled(true);
    		        positionYRedUnitTextField.setEnabled(true);
    		        redUnitIDXTextField.setEnabled(true);
    		        speedRedUnitTextField.setEnabled(true);
    		       // numberRedUnitsTextField.setEnabled(true);
 	       }
    }

    
    
    private void addTargetPatternButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTargetPatternButtonActionPerformed
       
    	try {
	    	
    		   Integer.parseInt(positionXPatternTextField.getText());
			   Integer.parseInt(positionYPatternTextField.getText());
			   Integer.parseInt(speedPatternTextField.getText());
			   Integer.parseInt(fuelPointsPatternTextField.getText());
	        
	    } catch (NumberFormatException e) {
	    	
	    	JOptionPane.showMessageDialog(null,
    	            "All Inputs Should Be Valid!",
    	            "Input Error", JOptionPane.ERROR_MESSAGE);
	    	return;
	     
	    }
    	
    	
    	if(     targetTypePatternComboBox.getSelectedIndex() == 0 ||
    			positionXPatternTextField.getText().length() == 0 ||
    			positionYPatternTextField.getText().length() == 0 ||
    			speedPatternTextField.getText().length() == 0 ||
    			fuelPointsPatternTextField.getText().length() == 0){
    		    
    		JOptionPane.showMessageDialog(null,
    	            "All Inputs Should Be Provided!",
    	            "Input Error", JOptionPane.ERROR_MESSAGE);
    		
    	} else if (Integer.parseInt(positionXPatternTextField.getText()) < 0 ||
    			   Integer.parseInt(positionXPatternTextField.getText()) > 750 ||
    			   Integer.parseInt(positionYPatternTextField.getText()) < 0 ||
    			   Integer.parseInt(positionYPatternTextField.getText()) > 570 ||
    			   Integer.parseInt(speedPatternTextField.getText()) < 1 ||
    			   Integer.parseInt(fuelPointsPatternTextField.getText()) < 1){
    		
    		//JOptionPane.showConfirmDialog(null, "All Entries Should be In Range", "naughty", JOptionPane.CANCEL_OPTION);
    		JOptionPane.showMessageDialog(null,
    	            "All Inputs Should be In Scope!",
    	            "Input Error", JOptionPane.ERROR_MESSAGE);
    		
    	} else if (movementComboBox.getSelectedIndex() == 2 
    			&& (Integer.parseInt(positionYPatternTextField.getText()) != 0 &&
    				Integer.parseInt(positionYPatternTextField.getText()) != 570)) {
           
    		JOptionPane.showMessageDialog(null,
    	            "positionY MUST Be Integer Value (0 OR 570)!",
    	            "Input Error", JOptionPane.ERROR_MESSAGE);
    		
 	   } else if (movementComboBox.getSelectedIndex() == 3  &&
 			   (Integer.parseInt(positionXPatternTextField.getText()) != 0 &&
 			  Integer.parseInt(positionXPatternTextField.getText()) != 750 )){
 		   
 		  JOptionPane.showMessageDialog(null,
  	            "positionX MUST Be Integer Value (0 OR 750)!",
  	            "Input Error", JOptionPane.ERROR_MESSAGE);
 		   
 	   } 
    	else {
    	// add scenario target element
    	            String imageType = targetTypes[targetTypePatternComboBox.getSelectedIndex()];
    	            Element target = document.createElement("target");
    				targets.appendChild(target);

    				// set an attribute id to target element
    				String id = String.valueOf(index);
    				Attr targetId = document.createAttribute("id");
    				targetId.setValue(id);
    				target.setAttributeNode(targetId);
    				
    				// set an attribute positionX to target element 
    				Attr targetPositionX = document.createAttribute("positionX");
    				targetPositionX.setValue(positionXPatternTextField.getText());
    				target.setAttributeNode(targetPositionX);
    				
    				// set an attribute positionY to target element 
    				Attr targetPositionY = document.createAttribute("positionY");
    				targetPositionY.setValue(positionYPatternTextField.getText());
    				target.setAttributeNode(targetPositionY);
    				
    				// set an attribute speed to target element 
    				Attr targetSpeed = document.createAttribute("speed");
    				targetSpeed.setValue(speedPatternTextField.getText());
    				target.setAttributeNode(targetSpeed);
    				
    				// set an attribute image type to target element 
    				Attr targetImageType = document.createAttribute("imageType");
    				targetImageType.setValue(imageType);
    				target.setAttributeNode(targetImageType);
    				
    				// set an attribute fuel points to target element 
    				Attr fuelPoints = document.createAttribute("fuelPoints");
    				fuelPoints.setValue(fuelPointsPatternTextField.getText());
    				target.setAttributeNode(fuelPoints);
    	
    	  // done with child elements
    				
    				positionXPatternTextField.setText("");
    				positionYPatternTextField.setText("");
    				speedPatternTextField.setText("1");
    				fuelPointsPatternTextField.setText("1");
    				targetTypePatternComboBox.setSelectedIndex(0);
    		    	index++;targetsNO++;
    		    	numberPatternTargetsTextField.setText(String.valueOf(targetsNO));
    		    	//doneButton.setEnabled(true);
    		    	
    		    	// Enable blue units
    		        addBlueUnittButton.setEnabled(true);
    		        blueUnitIDXTextField.setEnabled(true);
    		        fuelPointsBlueUnitTextField.setEnabled(true);
    		        detectionBlueUnitTextField.setEnabled(true);
    		        positionXBlueUnitTextField.setEnabled(true);
    		        positionYBlueUnitTextField.setEnabled(true);
    		        speedBlueUnitTextField.setEnabled(true);
    		        //numberBlueUnitsTextField.setEnabled(true);  
    		        
    		        
    		        // Enable red units
    		        addRedUnitButton.setEnabled(true);
    		        fuelPointsRedUnitTextField.setEnabled(true);
    		        detectionRedUnitTextField.setEnabled(true);
    		        positionXRedUnitTextField.setEnabled(true);
    		        positionYRedUnitTextField.setEnabled(true);
    		        redUnitIDXTextField.setEnabled(true);
    		        speedRedUnitTextField.setEnabled(true);
    		        //numberRedUnitsTextField.setEnabled(true);
    	}
    
    
    }//GEN-LAST:event_addTargetPatternButtonActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doenButtonActionPerformed
        
    	            // create the xml file
    				//transform the DOM Object to an XML File
    	        if (performanceComboBox.getSelectedIndex() == 0){
    		
    		       JOptionPane.showMessageDialog(null,
     	            "Select A Scenario Performance Level!",
     	            "Input Error", JOptionPane.ERROR_MESSAGE);
    		     return;
    	        
    	       } else {
    	    	 // root element attribute movement
    				Attr performanceLevel = document.createAttribute("performanceLevel");
    				performanceLevel.setValue(performanceList[performanceComboBox.getSelectedIndex()]);
    				root.setAttributeNode(performanceLevel);
    	       }
    	            
					try {
						
						String fileName = scenarioPath + scenarioNameTextField.getText() + ".xml";
	    				TransformerFactory transformerFactory = TransformerFactory.newInstance();
	    				Transformer transformer;
						transformer = transformerFactory.newTransformer();
						DOMSource domSource = new DOMSource(document);
	    				StreamResult streamResult = new StreamResult(new File(fileName));

	    				// If you use
	    				// StreamResult result = new StreamResult(System.out);
	    				// the output will be pushed to the standard output ...
	    				// You can use that for debugging 

	    				transformer.transform(domSource, streamResult);

	    				//System.out.println("Done creating XML File  " + fileName);
	    				
	    				JOptionPane.showMessageDialog(null,
	    						"Done Creating XML File:   " + fileName,
	    	        		    "XML File", JOptionPane.INFORMATION_MESSAGE);
					
					} catch (TransformerConfigurationException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (TransformerException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
    				
					
					// create list text file
					try {
			            // Assume default encoding.
			            FileWriter fileWriter =
			                new FileWriter(scenarioPath +"List.txt", true);

			            // Always wrap FileWriter in BufferedWriter.
			            BufferedWriter bufferedWriter =
			                new BufferedWriter(fileWriter);

			            // Note that write() does not automatically
			            // append a newline character.
			            bufferedWriter.write(scenarioNameTextField.getText());
			            bufferedWriter.newLine();
			            
			            // Always close files.
			            bufferedWriter.close();
			        }
			        catch(IOException ex) {
			            /*System.out.println(
			                "Error writing to file '"
			                + "List.txt" + "'");*/
			            
			            JOptionPane.showMessageDialog(null,
			            		"Error Writing To File '"
						                + "List.txt" + "'",
	    	        		    "Error", JOptionPane.ERROR_MESSAGE);
			            ex.printStackTrace();
			            //System.out.println("I am here now");
			            // Or we could just do this:
			            // ex.printStackTrace();
			        }
			    			
    	
    	// TODO add your handling code here:
        this.dispose(); //close this gui and  safely leave the memory
        //main.dispose();
        main.readListFile();
        main.setVisible(true);
        
    }//GEN-LAST:event_doenButtonActionPerformed

    private void movementComboBoxActionPerformed(java.awt.event.ActionEvent evt) {  
    	
    	if (movementComboBox.getSelectedIndex() != 0) {
        
    		movement =  movementTypes[ movementComboBox.getSelectedIndex()] ;
 	    
 	       
 	            // root element
 				root = document.createElement("scenario");
 				document.appendChild(root);
 				
 				
 				// root element attribute name
 				Attr scenarioName = document.createAttribute("name");
 				scenarioName.setValue(scenarioNameTextField.getText());
 				root.setAttributeNode(scenarioName);
 				
 				// root element attribute movement
 				Attr scenarioMovement = document.createAttribute("movement");
 				scenarioMovement.setValue(movement);
 				root.setAttributeNode(scenarioMovement);
 				
 				
 				// create a root elements targets
 				targets = document.createElement("targets");
 				units = document.createElement("units");
				root.appendChild(targets);
				root.appendChild(units);
 				
 				/*// root element attribute
 				Attr scenarioSeed = document.createAttribute("seed");
 				System.out.println("   -- Seed -- " +  seed );
 				scenarioSeed.setValue(seed);
 				root.setAttributeNode(scenarioSeed);*/
 				
 				// done with root element

 	    
 				//movementComboBox.disable();     
               if(movementComboBox.getSelectedIndex() == 1){
            	   seedTextField.setEnabled(true);
            	   movementComboBox.setEnabled(false);
            	   
               } else if(movementComboBox.getSelectedIndex() > 1){
            	   
            	   if (movementComboBox.getSelectedIndex() == 2){

            		   positionXPatternTextField.setToolTipText("Integer Value between (0 and 750)");
            		   positionYPatternTextField.setToolTipText("Integer Value (0 OR 570)");
                   

            	   } else if (movementComboBox.getSelectedIndex() == 3){
            		   
            		   positionXPatternTextField.setToolTipText("Integer Value (0 OR 750)");
            		   positionYPatternTextField.setToolTipText("Integer Value Between (0 and 570)");
            		   
            	   }
            		   
            	   movementComboBox.setEnabled(false);
            	   targetTypePatternComboBox.setEnabled(true);
                   positionXPatternTextField.setEnabled(true);
                   positionYPatternTextField.setEnabled(true);
                   speedPatternTextField.setEnabled(true);
                   fuelPointsPatternTextField.setEnabled(true);
                   addTargetPatternButton.setEnabled(true);
             	   
               }
    	}
               
               
    }  
    
        
    //GEN-LAST:event_addTargetButtonActionPerformed

    private void scenarioNameTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_scenarioNameTextFieldKeyPressed
        // TODO add your handling code here:
    	//System.out.println( " name is exist ");
    }//GEN-LAST:event_scenarioNameTextFieldKeyPressed

    private void scenarioNameTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scenarioNameTextFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_scenarioNameTextFieldMouseClicked

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    
    public int targetsNO = 0, blueUnitsNO = 0, redUnitsNO = 0;
    public Element root,targets,units;
    public DocumentBuilderFactory documentFactory;
    public DocumentBuilder documentBuilder;
    public Document document;
    public int index = 1;
    //public static RandomMove randomMove;
    public String movement;
    public String seed;
    public String [] movementTypes;
    public String [] targetTypes;
    public String [] performanceList;
    public Set<String> unitIDs = new HashSet<String>();
    AdminMain main;
    
    
 // Variables declaration for GUI - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBlueUnittButton;
    private javax.swing.JButton addRedUnitButton;
    private javax.swing.JButton addTargetButton;
    private javax.swing.JButton addTargetPatternButton;
    private javax.swing.JLabel blueLabel;
    private javax.swing.JLabel blueUnitIDLabel;
    private javax.swing.JTextField blueUnitIDXTextField;
    private javax.swing.JLabel detectionBlueUnitLabel;
    private javax.swing.JTextField detectionBlueUnitTextField;
    private javax.swing.JLabel detectionRedLabel;
    private javax.swing.JTextField detectionRedUnitTextField;
    private javax.swing.JButton doneButton;
    private javax.swing.JLabel fuelPointsBlueUnitLabel;
    private javax.swing.JTextField fuelPointsBlueUnitTextField;
    private javax.swing.JLabel fuelPointsLabel;
    private javax.swing.JLabel fuelPointsLabel2;
    private javax.swing.JTextField fuelPointsRedUnitTextField;
    private javax.swing.JTextField fuelPointsPatternTextField;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JComboBox movementComboBox;
    private javax.swing.JLabel movementLabel;
    private javax.swing.JLabel numberBlueUnitsLabel;
    private javax.swing.JTextField numberBlueUnitsTextField;
    private javax.swing.JLabel numberPatternTargetsLabel;
    private javax.swing.JTextField numberPatternTargetsTextField;
    private javax.swing.JLabel numberRedUnitsLabel;
    private javax.swing.JTextField numberRedUnitsTextField;
    private javax.swing.JLabel targetTypeLabel;
    private javax.swing.JLabel targetTypePatternLabel;
    private javax.swing.JComboBox targetTypeComboBox;
    private javax.swing.JComboBox targetTypePatternComboBox;
    private javax.swing.JLabel patternLabel;
    private javax.swing.JComboBox performanceComboBox;
    private javax.swing.JLabel performanceLabel;
    private javax.swing.JLabel positionXBlueUnitLabel;
    private javax.swing.JTextField positionXBlueUnitTextField;
    private javax.swing.JLabel positionXLabel;
    private javax.swing.JLabel positionXLabel2;
    private javax.swing.JLabel positionXPatternLabel1;
    private javax.swing.JTextField positionXPatternTextField;
    private javax.swing.JTextField positionXRedUnitTextField;
    private javax.swing.JTextField positionXTextField;
    private javax.swing.JLabel positionYBlueUnitLabel;
    private javax.swing.JTextField positionYBlueUnitTextField;
    private javax.swing.JLabel positionYLabel;
    private javax.swing.JLabel positionYLabel2;
    private javax.swing.JLabel positionYPatternLabel;
    private javax.swing.JTextField positionYPatternTextField;
    private javax.swing.JTextField positionYRedUnitTextField;
    private javax.swing.JTextField positionYTextField;
    private javax.swing.JLabel randomLabel;
    private javax.swing.JLabel redLabel;
    private javax.swing.JLabel redUnitIDLabel;
    private javax.swing.JTextField redUnitIDXTextField;
    private javax.swing.JLabel scenarioNameLabel;
    private javax.swing.JTextField scenarioNameTextField;
    private javax.swing.JLabel seedLabel;
    private javax.swing.JTextField seedTextField;
    private javax.swing.JLabel speedBlueUnitLabel;
    private javax.swing.JTextField speedBlueUnitTextField;
    private javax.swing.JLabel speedLabel;
    private javax.swing.JLabel speedPatternLabel;
    private javax.swing.JLabel speedPatternLabel2;
    private javax.swing.JTextField speedPatternTextField;
    private javax.swing.JTextField speedRedUnitTextField;
    private javax.swing.JTextField speedTextField;
    private javax.swing.JTextField numberRandomTargetsTextField;
    private javax.swing.JLabel numberofRandomTragetLabel;
    String scenarioPath = JarPath.getClassPath() +"scenarios//";
    
    
    // End of variables declaration//GEN-END:variables

}
